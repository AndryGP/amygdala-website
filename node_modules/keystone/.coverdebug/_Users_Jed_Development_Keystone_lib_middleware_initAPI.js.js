
// Instrumentation Header
{
    var fs = require('fs');
    var __statement_soTSDT, __expression_JlCVoN, __block_Dmt9lL;
    var store = require('/Users/Jed/Development/Keystone/node_modules/gulp-coverage/contrib/coverage_store.js');
    
    __statement_soTSDT = function(i) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/middleware/initAPI.js');
        fs.writeSync(fd, '{"statement": {"node": ' + i + '}},\n');
    }; 
    
    __expression_JlCVoN = function(i) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/middleware/initAPI.js');
        fs.writeSync(fd, '{"expression": {"node": ' + i + '}},\n');
    }; 
    
    __block_Dmt9lL = function(i) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/middleware/initAPI.js');
        fs.writeSync(fd, '{"block": ' + i + '},\n');
    }; 
    __intro_naberf = function(id, obj) {
        // console.log('__intro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        (typeof obj === 'object' || typeof obj === 'function') &&
            Object.defineProperty && Object.defineProperty(obj, '__instrumented_miss', {enumerable: false, writable: true});
        obj.__instrumented_miss = obj.__instrumented_miss || [];
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (obj.length === 0) {
                // console.log('interim miss: ', id);
                obj.__instrumented_miss[id] = true;
            } else {
                obj.__instrumented_miss[id] = false;
            }
        }
        return obj;
    };
    function isProbablyChainable(obj, id) {
        return obj &&
            obj.__instrumented_miss[id] !== undefined &&
            'number' === typeof obj.length;
    }
    __extro_YJ7dL6 = function(id, obj) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/middleware/initAPI.js');
        // console.log('__extro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (isProbablyChainable(obj, id) && obj.length === 0 && obj.__instrumented_miss[id]) {
                // if the call was not a "constructor" - i.e. it did not add things to the chainable
                // and it did not return anything from the chainable, it is a miss
                // console.log('miss: ', id);
            } else {
                fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
            }
            obj.__instrumented_miss[id] = undefined;
        } else {
            fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
        }
        return obj;
    };
};
////////////////////////

// Instrumented Code
{
    __statement_soTSDT(0);
    exports = module.exports = function (keystone) {
        __block_Dmt9lL(0);
        return __expression_JlCVoN(1), function initAPI(req, res, next) {
            __block_Dmt9lL(1);
            {
                __statement_soTSDT(2);
                res.apiResponse = function (status) {
                    __block_Dmt9lL(2);
                    if (req.query.callback) {
                        __block_Dmt9lL(3);
                        {
                            __statement_soTSDT(3);
                            __extro_YJ7dL6(4, __intro_naberf(4, res).jsonp(status));
                        }
                    } else {
                        __block_Dmt9lL(4);
                        {
                            __statement_soTSDT(5);
                            __extro_YJ7dL6(6, __intro_naberf(6, res).json(status));
                        }
                    }
                };
            }
            {
                __statement_soTSDT(7);
                res.apiError = function (key, err, msg, code) {
                    __block_Dmt9lL(5);
                    {
                        __statement_soTSDT(8);
                        msg = (__expression_JlCVoN(9), (__expression_JlCVoN(10), msg) || 'Error');
                    }
                    {
                        __statement_soTSDT(11);
                        key = (__expression_JlCVoN(12), (__expression_JlCVoN(13), key) || 'unknown error');
                    }
                    {
                        __statement_soTSDT(14);
                        msg += (__expression_JlCVoN(15), (__expression_JlCVoN(16), ' (' + (__expression_JlCVoN(17), key)) + ')');
                    }
                    if (__extro_YJ7dL6(18, __intro_naberf(18, keystone).get('logger'))) {
                        __block_Dmt9lL(6);
                        {
                            __statement_soTSDT(19);
                            __extro_YJ7dL6(20, __intro_naberf(20, console).log((__expression_JlCVoN(21), (__expression_JlCVoN(22), msg) + ((__expression_JlCVoN(25), err) ? (__expression_JlCVoN(23), ':') : (__expression_JlCVoN(24), '')))));
                        }
                        if (__expression_JlCVoN(26), err) {
                            __block_Dmt9lL(7);
                            {
                                __statement_soTSDT(27);
                                __extro_YJ7dL6(28, __intro_naberf(28, console).log(err));
                            }
                        }
                    }
                    {
                        __statement_soTSDT(29);
                        __extro_YJ7dL6(30, __intro_naberf(30, res).status((__expression_JlCVoN(31), (__expression_JlCVoN(32), code) || 500)));
                    }
                    {
                        __statement_soTSDT(33);
                        __extro_YJ7dL6(34, __intro_naberf(34, res).apiResponse({
                            error: (__expression_JlCVoN(35), (__expression_JlCVoN(36), key) || 'error'),
                            detail: err
                        }));
                    }
                };
            }
            {
                __statement_soTSDT(37);
                __expression_JlCVoN(38), next();
            }
        };
    };
}