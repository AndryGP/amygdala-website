
// Instrumentation Header
{
    var fs = require('fs');
    var __statement_nWrBLR, __expression_SHXH3W, __block_b45Rf$;
    var store = require('/Users/Jed/Development/Keystone/node_modules/gulp-coverage/contrib/coverage_store.js');
    
    __statement_nWrBLR = function(i) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/core/options.js');
        fs.writeSync(fd, '{"statement": {"node": ' + i + '}},\n');
    }; 
    
    __expression_SHXH3W = function(i) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/core/options.js');
        fs.writeSync(fd, '{"expression": {"node": ' + i + '}},\n');
    }; 
    
    __block_b45Rf$ = function(i) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/core/options.js');
        fs.writeSync(fd, '{"block": ' + i + '},\n');
    }; 
    __intro_ez$Nnf = function(id, obj) {
        // console.log('__intro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        (typeof obj === 'object' || typeof obj === 'function') &&
            Object.defineProperty && Object.defineProperty(obj, '__instrumented_miss', {enumerable: false, writable: true});
        obj.__instrumented_miss = obj.__instrumented_miss || [];
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (obj.length === 0) {
                // console.log('interim miss: ', id);
                obj.__instrumented_miss[id] = true;
            } else {
                obj.__instrumented_miss[id] = false;
            }
        }
        return obj;
    };
    function isProbablyChainable(obj, id) {
        return obj &&
            obj.__instrumented_miss[id] !== undefined &&
            'number' === typeof obj.length;
    }
    __extro_I96Qsk = function(id, obj) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/core/options.js');
        // console.log('__extro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (isProbablyChainable(obj, id) && obj.length === 0 && obj.__instrumented_miss[id]) {
                // if the call was not a "constructor" - i.e. it did not add things to the chainable
                // and it did not return anything from the chainable, it is a miss
                // console.log('miss: ', id);
            } else {
                fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
            }
            obj.__instrumented_miss[id] = undefined;
        } else {
            fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
        }
        return obj;
    };
};
////////////////////////

// Instrumented Code
{
    __statement_nWrBLR(0);
    var path = (__expression_SHXH3W(1), require('path')), _ = (__expression_SHXH3W(2), require('underscore')), cloudinary = (__expression_SHXH3W(3), require('cloudinary')), mandrillapi = (__expression_SHXH3W(4), require('mandrill-api')), utils = (__expression_SHXH3W(5), require('keystone-utils'));
}
function options(moduleRoot) {
    __block_b45Rf$(0);
    {
        __statement_nWrBLR(6);
        var exports = {};
    }
    {
        __statement_nWrBLR(7);
        var remappedOptions = {
                'signin success': 'signin redirect',
                'signout': 'signout url'
            };
    }
    {
        __statement_nWrBLR(8);
        exports.set = function (key, value) {
            __block_b45Rf$(1);
            if (__expression_SHXH3W(9), arguments.length === 1) {
                __block_b45Rf$(2);
                return __expression_SHXH3W(10), this._options[key];
            }
            if (remappedOptions[key]) {
                __block_b45Rf$(3);
                if (__extro_I96Qsk(11, __intro_ez$Nnf(11, this).get('logger'))) {
                    __block_b45Rf$(4);
                    {
                        __statement_nWrBLR(12);
                        __extro_I96Qsk(13, __intro_ez$Nnf(13, console).log((__expression_SHXH3W(14), (__expression_SHXH3W(15), (__expression_SHXH3W(16), (__expression_SHXH3W(17), (__expression_SHXH3W(18), (__expression_SHXH3W(19), (__expression_SHXH3W(20), '\nWarning: the `' + (__expression_SHXH3W(21), key)) + '` option has been deprecated. Please use `') + remappedOptions[key]) + '` instead.\n\n') + 'Support for `') + (__expression_SHXH3W(22), key)) + '` will be removed in a future version.')));
                    }
                }
                {
                    __statement_nWrBLR(23);
                    key = remappedOptions[key];
                }
            }
            switch (__expression_SHXH3W(24), key) {
            case 'cloudinary config': {
                    __block_b45Rf$(5);
                    if (__extro_I96Qsk(25, __intro_ez$Nnf(25, _).isObject(value))) {
                        __block_b45Rf$(6);
                        {
                            __statement_nWrBLR(26);
                            __extro_I96Qsk(27, __intro_ez$Nnf(27, cloudinary).config(value));
                        }
                    }
                    {
                        __statement_nWrBLR(28);
                        value = __extro_I96Qsk(29, __intro_ez$Nnf(29, cloudinary).config());
                    }
                    break;
                }
            case 'mandrill api key': {
                    __block_b45Rf$(7);
                    if (__expression_SHXH3W(30), value) {
                        __block_b45Rf$(8);
                        {
                            __statement_nWrBLR(31);
                            this.mandrillAPI = new mandrillapi.Mandrill(value);
                        }
                    }
                    break;
                }
            case 'auth': {
                    __block_b45Rf$(9);
                    if (__expression_SHXH3W(32), (__expression_SHXH3W(33), (__expression_SHXH3W(34), value) === true) && (__expression_SHXH3W(35), !__extro_I96Qsk(36, __intro_ez$Nnf(36, this).get('session')))) {
                        __block_b45Rf$(10);
                        {
                            __statement_nWrBLR(37);
                            __extro_I96Qsk(38, __intro_ez$Nnf(38, this).set('session', true));
                        }
                    }
                    break;
                }
            case 'nav': {
                    __block_b45Rf$(11);
                    {
                        __statement_nWrBLR(39);
                        this.nav = __extro_I96Qsk(40, __intro_ez$Nnf(40, this).initNav(value));
                    }
                    break;
                }
            case 'mongo': {
                    __block_b45Rf$(12);
                    if (__expression_SHXH3W(41), 'string' !== (__expression_SHXH3W(42), typeof value)) {
                        __block_b45Rf$(13);
                        if (__expression_SHXH3W(43), __extro_I96Qsk(44, __intro_ez$Nnf(44, Array).isArray(value)) && (__expression_SHXH3W(45), (__expression_SHXH3W(46), value.length === 2) || (__expression_SHXH3W(47), value.length === 3))) {
                            __block_b45Rf$(14);
                            {
                                __statement_nWrBLR(48);
                                __extro_I96Qsk(49, __intro_ez$Nnf(49, console).log((__expression_SHXH3W(50), '\nWarning: using an array for the `mongo` option has been deprecated.\nPlease use a mongodb connection string, e.g. mongodb://localhost/db_name instead.\n\n' + 'Support for arrays as the `mongo` setting will be removed in a future version.')));
                            }
                            {
                                __statement_nWrBLR(51);
                                value = (__expression_SHXH3W(54), value.length === 2) ? (__expression_SHXH3W(52), (__expression_SHXH3W(55), (__expression_SHXH3W(56), (__expression_SHXH3W(57), 'mongodb://' + value[0]) + '/') + value[1])) : (__expression_SHXH3W(53), (__expression_SHXH3W(58), (__expression_SHXH3W(59), (__expression_SHXH3W(60), (__expression_SHXH3W(61), (__expression_SHXH3W(62), 'mongodb://' + value[0]) + ':') + value[2]) + '/') + value[1]));
                            }
                        } else {
                            __block_b45Rf$(15);
                            {
                                __statement_nWrBLR(63);
                                __extro_I96Qsk(64, __intro_ez$Nnf(64, console).error('\nInvalid Configuration:\nThe `mongo` option must be a mongodb connection string, e.g. mongodb://localhost/db_name\n'));
                            }
                            {
                                __statement_nWrBLR(65);
                                __extro_I96Qsk(66, __intro_ez$Nnf(66, process).exit(1));
                            }
                        }
                    }
                    break;
                }
            }
            {
                __statement_nWrBLR(67);
                this._options[key] = value;
            }
            return __expression_SHXH3W(68), this;
        };
    }
    {
        __statement_nWrBLR(69);
        exports.options = function (options) {
            __block_b45Rf$(16);
            if (__expression_SHXH3W(70), !arguments.length) {
                __block_b45Rf$(17);
                return __expression_SHXH3W(71), this._options;
            }
            if (__extro_I96Qsk(72, __intro_ez$Nnf(72, utils).isObject(options))) {
                __block_b45Rf$(18);
                {
                    __statement_nWrBLR(73);
                    var keys = __extro_I96Qsk(74, __intro_ez$Nnf(74, Object).keys(options)), i = keys.length, k;
                }
                while (__expression_SHXH3W(75), i--) {
                    __block_b45Rf$(19);
                    {
                        __statement_nWrBLR(76);
                        k = keys[i];
                    }
                    {
                        __statement_nWrBLR(77);
                        __extro_I96Qsk(78, __intro_ez$Nnf(78, this).set(k, options[k]));
                    }
                }
            }
            return __expression_SHXH3W(79), this._options;
        };
    }
    {
        __statement_nWrBLR(80);
        exports.get = exports.set;
    }
    {
        __statement_nWrBLR(81);
        exports.getPath = function (key, defaultValue) {
            __block_b45Rf$(20);
            return __expression_SHXH3W(82), __extro_I96Qsk(83, __intro_ez$Nnf(83, this).expandPath((__expression_SHXH3W(84), __extro_I96Qsk(85, __intro_ez$Nnf(85, this).get(key)) || (__expression_SHXH3W(86), defaultValue))));
        };
    }
    {
        __statement_nWrBLR(87);
        exports.expandPath = function (pathValue) {
            __block_b45Rf$(21);
            {
                __statement_nWrBLR(88);
                pathValue = (__expression_SHXH3W(91), (__expression_SHXH3W(92), (__expression_SHXH3W(93), 'string' === (__expression_SHXH3W(94), typeof pathValue)) && (__expression_SHXH3W(95), __extro_I96Qsk(96, __intro_ez$Nnf(96, pathValue).substr(0, 1)) !== path.sep)) && (__expression_SHXH3W(97), __extro_I96Qsk(98, __intro_ez$Nnf(98, pathValue).substr(1, 2)) !== ':\\')) ? (__expression_SHXH3W(89), __extro_I96Qsk(99, __intro_ez$Nnf(99, path).join(moduleRoot, pathValue))) : (__expression_SHXH3W(90), pathValue);
            }
            return __expression_SHXH3W(100), pathValue;
        };
    }
    return __expression_SHXH3W(101), exports;
}
{
    __statement_nWrBLR(102);
    module.exports = options;
}