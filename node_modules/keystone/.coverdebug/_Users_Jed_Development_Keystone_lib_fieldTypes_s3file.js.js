
// Instrumentation Header
{
    var fs = require('fs');
    var __statement_mRtBoR, __expression_JEXRqr, __block_s7vX83;
    var store = require('/Users/Jed/Development/Keystone/node_modules/gulp-coverage/contrib/coverage_store.js');
    
    __statement_mRtBoR = function(i) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/fieldTypes/s3file.js');
        fs.writeSync(fd, '{"statement": {"node": ' + i + '}},\n');
    }; 
    
    __expression_JEXRqr = function(i) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/fieldTypes/s3file.js');
        fs.writeSync(fd, '{"expression": {"node": ' + i + '}},\n');
    }; 
    
    __block_s7vX83 = function(i) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/fieldTypes/s3file.js');
        fs.writeSync(fd, '{"block": ' + i + '},\n');
    }; 
    __intro_W15Vqy = function(id, obj) {
        // console.log('__intro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        (typeof obj === 'object' || typeof obj === 'function') &&
            Object.defineProperty && Object.defineProperty(obj, '__instrumented_miss', {enumerable: false, writable: true});
        obj.__instrumented_miss = obj.__instrumented_miss || [];
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (obj.length === 0) {
                // console.log('interim miss: ', id);
                obj.__instrumented_miss[id] = true;
            } else {
                obj.__instrumented_miss[id] = false;
            }
        }
        return obj;
    };
    function isProbablyChainable(obj, id) {
        return obj &&
            obj.__instrumented_miss[id] !== undefined &&
            'number' === typeof obj.length;
    }
    __extro_WqjK9Y = function(id, obj) {
        var fd = store.register('/Users/Jed/Development/Keystone/lib/fieldTypes/s3file.js');
        // console.log('__extro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (isProbablyChainable(obj, id) && obj.length === 0 && obj.__instrumented_miss[id]) {
                // if the call was not a "constructor" - i.e. it did not add things to the chainable
                // and it did not return anything from the chainable, it is a miss
                // console.log('miss: ', id);
            } else {
                fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
            }
            obj.__instrumented_miss[id] = undefined;
        } else {
            fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
        }
        return obj;
    };
};
////////////////////////

// Instrumented Code
{
    __statement_mRtBoR(0);
    var _ = (__expression_JEXRqr(1), require('underscore')), moment = (__expression_JEXRqr(2), require('moment')), keystone = (__expression_JEXRqr(3), require('../../')), async = (__expression_JEXRqr(4), require('async')), util = (__expression_JEXRqr(5), require('util')), knox = (__expression_JEXRqr(6), require('knox')), utils = (__expression_JEXRqr(7), require('keystone-utils')), super_ = (__expression_JEXRqr(8), require('../field'));
}
function s3file(list, path, options) {
    __block_s7vX83(0);
    {
        __statement_mRtBoR(9);
        this._underscoreMethods = [
            'format',
            'uploadFile'
        ];
    }
    {
        __statement_mRtBoR(10);
        this._pre = {
            upload: []
        };
    }
    {
        __statement_mRtBoR(11);
        options.nofilter = true;
    }
    if (options.initial) {
        __block_s7vX83(1);
        {
            __statement_mRtBoR(12);
            throw new Error((__expression_JEXRqr(13), (__expression_JEXRqr(14), (__expression_JEXRqr(15), (__expression_JEXRqr(16), (__expression_JEXRqr(17), 'Invalid Configuration\n\n' + 'S3File fields (') + list.key) + '.') + (__expression_JEXRqr(18), path)) + ') do not currently support being used as initial fields.\n'));
        }
    }
    {
        __statement_mRtBoR(19);
        __extro_WqjK9Y(20, __intro_W15Vqy(20, s3file.super_).call(this, list, path, options));
    }
    if (__expression_JEXRqr(21), !this.s3config) {
        __block_s7vX83(2);
        {
            __statement_mRtBoR(22);
            throw new Error((__expression_JEXRqr(23), (__expression_JEXRqr(24), (__expression_JEXRqr(25), (__expression_JEXRqr(26), (__expression_JEXRqr(27), (__expression_JEXRqr(28), 'Invalid Configuration\n\n' + 'S3File fields (') + list.key) + '.') + (__expression_JEXRqr(29), path)) + ') require the "s3 config" option to be set.\n\n') + 'See http://keystonejs.com/docs/configuration/#services-amazons3 for more information.\n'));
        }
    }
    if (__expression_JEXRqr(30), options.pre && options.pre.upload) {
        __block_s7vX83(3);
        {
            __statement_mRtBoR(31);
            this._pre.upload = __extro_WqjK9Y(32, __intro_W15Vqy(32, this._pre.upload).concat(options.pre.upload));
        }
    }
}
{
    __statement_mRtBoR(33);
    __extro_WqjK9Y(34, __intro_W15Vqy(34, util).inherits(s3file, super_));
}
{
    __statement_mRtBoR(35);
    __extro_WqjK9Y(36, __intro_W15Vqy(36, Object).defineProperty(s3file.prototype, 's3config', {
        get: function () {
            __block_s7vX83(4);
            return __expression_JEXRqr(37), (__expression_JEXRqr(38), this.options.s3config || __extro_WqjK9Y(39, __intro_W15Vqy(39, keystone).get('s3 config')));
        }
    }));
}
{
    __statement_mRtBoR(40);
    s3file.prototype.pre = function (event, fn) {
        __block_s7vX83(5);
        if (__expression_JEXRqr(41), !this._pre[event]) {
            __block_s7vX83(6);
            {
                __statement_mRtBoR(42);
                throw new Error((__expression_JEXRqr(43), (__expression_JEXRqr(44), (__expression_JEXRqr(45), (__expression_JEXRqr(46), (__expression_JEXRqr(47), (__expression_JEXRqr(48), (__expression_JEXRqr(49), 'S3File (' + this.list.key) + '.') + this.path) + ') error: s3field.pre()\n\n') + 'Event ') + (__expression_JEXRqr(50), event)) + ' is not supported.\n'));
            }
        }
        {
            __statement_mRtBoR(51);
            __extro_WqjK9Y(52, __intro_W15Vqy(52, this._pre[event]).push(fn));
        }
        return __expression_JEXRqr(53), this;
    };
}
{
    __statement_mRtBoR(54);
    s3file.prototype.addToSchema = function () {
        __block_s7vX83(7);
        {
            __statement_mRtBoR(55);
            var field = this, schema = this.list.schema;
        }
        {
            __statement_mRtBoR(56);
            var paths = this.paths = {
                    filename: __extro_WqjK9Y(57, __intro_W15Vqy(57, this._path).append('.filename')),
                    path: __extro_WqjK9Y(58, __intro_W15Vqy(58, this._path).append('.path')),
                    size: __extro_WqjK9Y(59, __intro_W15Vqy(59, this._path).append('.size')),
                    filetype: __extro_WqjK9Y(60, __intro_W15Vqy(60, this._path).append('.filetype')),
                    url: __extro_WqjK9Y(61, __intro_W15Vqy(61, this._path).append('.url')),
                    exists: __extro_WqjK9Y(62, __intro_W15Vqy(62, this._path).append('.exists')),
                    upload: __extro_WqjK9Y(63, __intro_W15Vqy(63, this._path).append('_upload')),
                    action: __extro_WqjK9Y(64, __intro_W15Vqy(64, this._path).append('_action'))
                };
        }
        {
            __statement_mRtBoR(65);
            var schemaPaths = __extro_WqjK9Y(66, __intro_W15Vqy(66, this._path).addTo({}, {
                    filename: String,
                    path: String,
                    size: Number,
                    filetype: String,
                    url: String
                }));
        }
        {
            __statement_mRtBoR(67);
            __extro_WqjK9Y(68, __intro_W15Vqy(68, schema).add(schemaPaths));
        }
        {
            __statement_mRtBoR(69);
            var exists = function (item) {
                __block_s7vX83(8);
                return __expression_JEXRqr(70), __extro_WqjK9Y(73, __intro_W15Vqy(73, item).get(paths.url)) ? (__expression_JEXRqr(71), true) : (__expression_JEXRqr(72), false);
            };
        }
        {
            __statement_mRtBoR(74);
            __extro_WqjK9Y(75, __intro_W15Vqy(75, __extro_WqjK9Y(76, __intro_W15Vqy(76, schema).virtual(paths.exists))).get(function () {
                __block_s7vX83(9);
                return __expression_JEXRqr(77), __extro_WqjK9Y(78, __intro_W15Vqy(78, schemaMethods.exists).apply(this));
            }));
        }
        {
            __statement_mRtBoR(79);
            var reset = function (item) {
                __block_s7vX83(10);
                {
                    __statement_mRtBoR(80);
                    __extro_WqjK9Y(81, __intro_W15Vqy(81, item).set(field.path, {
                        filename: '',
                        path: '',
                        size: 0,
                        filetype: '',
                        url: ''
                    }));
                }
            };
        }
        {
            __statement_mRtBoR(82);
            var schemaMethods = {
                    exists: function () {
                        __block_s7vX83(11);
                        return __expression_JEXRqr(83), (__expression_JEXRqr(84), exists(this));
                    },
                    reset: function () {
                        __block_s7vX83(12);
                        {
                            __statement_mRtBoR(85);
                            __expression_JEXRqr(86), reset(this);
                        }
                    },
                    delete: function () {
                        __block_s7vX83(13);
                        try {
                            __block_s7vX83(14);
                            {
                                __statement_mRtBoR(87);
                                var client = __extro_WqjK9Y(88, __intro_W15Vqy(88, knox).createClient(field.s3config));
                            }
                            {
                                __statement_mRtBoR(89);
                                __extro_WqjK9Y(90, __intro_W15Vqy(90, client).deleteFile((__expression_JEXRqr(91), __extro_WqjK9Y(92, __intro_W15Vqy(92, this).get(paths.path)) + __extro_WqjK9Y(93, __intro_W15Vqy(93, this).get(paths.filename))), function (err, res) {
                                    __block_s7vX83(15);
                                    {
                                        __statement_mRtBoR(94);
                                        (__expression_JEXRqr(97), res) ? (__expression_JEXRqr(95), __extro_WqjK9Y(98, __intro_W15Vqy(98, res).resume())) : (__expression_JEXRqr(96), false);
                                    }
                                }));
                            }
                        } catch (e) {
                            __block_s7vX83(16);
                        }
                        {
                            __statement_mRtBoR(99);
                            __expression_JEXRqr(100), reset(this);
                        }
                    }
                };
        }
        {
            __statement_mRtBoR(101);
            __extro_WqjK9Y(102, __intro_W15Vqy(102, _).each(schemaMethods, function (fn, key) {
                __block_s7vX83(17);
                {
                    __statement_mRtBoR(103);
                    __extro_WqjK9Y(104, __intro_W15Vqy(104, field).underscoreMethod(key, fn));
                }
            }));
        }
        {
            __statement_mRtBoR(105);
            this.apply = function (item, method) {
                __block_s7vX83(18);
                return __expression_JEXRqr(106), __extro_WqjK9Y(107, __intro_W15Vqy(107, schemaMethods[method]).apply(item, __extro_WqjK9Y(108, __intro_W15Vqy(108, Array.prototype.slice).call(arguments, 2))));
            };
        }
        {
            __statement_mRtBoR(109);
            __extro_WqjK9Y(110, __intro_W15Vqy(110, this).bindUnderscoreMethods());
        }
    };
}
{
    __statement_mRtBoR(111);
    s3file.prototype.format = function (item) {
        __block_s7vX83(19);
        return __expression_JEXRqr(112), __extro_WqjK9Y(113, __intro_W15Vqy(113, item).get(this.paths.url));
    };
}
{
    __statement_mRtBoR(114);
    s3file.prototype.isModified = function (item) {
        __block_s7vX83(20);
        return __expression_JEXRqr(115), __extro_WqjK9Y(116, __intro_W15Vqy(116, item).isModified(this.paths.url));
    };
}
{
    __statement_mRtBoR(117);
    s3file.prototype.validateInput = function (data) {
        __block_s7vX83(21);
        return __expression_JEXRqr(118), true;
    };
}
{
    __statement_mRtBoR(119);
    s3file.prototype.updateItem = function (item, data) {
        __block_s7vX83(22);
    };
}
{
    __statement_mRtBoR(120);
    s3file.prototype.uploadFile = function (item, file, update, callback) {
        __block_s7vX83(23);
        {
            __statement_mRtBoR(121);
            var field = this, path = field.options.s3path ? (__expression_JEXRqr(122), (__expression_JEXRqr(124), field.options.s3path + '/')) : (__expression_JEXRqr(123), ''), prefix = field.options.datePrefix ? (__expression_JEXRqr(125), (__expression_JEXRqr(127), __extro_WqjK9Y(128, __intro_W15Vqy(128, (__expression_JEXRqr(129), moment())).format(field.options.datePrefix)) + '-')) : (__expression_JEXRqr(126), ''), name = (__expression_JEXRqr(130), (__expression_JEXRqr(131), prefix) + file.name);
        }
        if (__expression_JEXRqr(132), field.options.allowedTypes && (__expression_JEXRqr(133), !__extro_WqjK9Y(134, __intro_W15Vqy(134, _).contains(field.options.allowedTypes, file.type)))) {
            __block_s7vX83(24);
            return __expression_JEXRqr(135), (__expression_JEXRqr(136), callback(new Error((__expression_JEXRqr(137), 'Unsupported File Type: ' + file.type))));
        }
        if (__expression_JEXRqr(138), 'function' == (__expression_JEXRqr(139), typeof update)) {
            __block_s7vX83(25);
            {
                __statement_mRtBoR(140);
                callback = update;
            }
            {
                __statement_mRtBoR(141);
                update = false;
            }
        }
        {
            __statement_mRtBoR(142);
            var doUpload = function () {
                __block_s7vX83(26);
                {
                    __statement_mRtBoR(143);
                    __extro_WqjK9Y(144, __intro_W15Vqy(144, __extro_WqjK9Y(145, __intro_W15Vqy(145, knox).createClient(field.s3config))).putFile(file.path, (__expression_JEXRqr(146), (__expression_JEXRqr(147), path) + (__expression_JEXRqr(148), name)), {
                        'Content-Type': file.type,
                        'x-amz-acl': 'public-read'
                    }, function (err, res) {
                        __block_s7vX83(27);
                        if (__expression_JEXRqr(149), res) {
                            __block_s7vX83(28);
                            {
                                __statement_mRtBoR(150);
                                __extro_WqjK9Y(151, __intro_W15Vqy(151, res).resume());
                            }
                        }
                        if (__expression_JEXRqr(152), err) {
                            __block_s7vX83(29);
                            return __expression_JEXRqr(153), (__expression_JEXRqr(154), callback(err));
                        }
                        {
                            __statement_mRtBoR(155);
                            var protocol = (__expression_JEXRqr(156), (__expression_JEXRqr(157), field.s3config.protocol && (__expression_JEXRqr(158), field.s3config.protocol + ':')) || ''), url = __extro_WqjK9Y(159, __intro_W15Vqy(159, res.req.url).replace(/^https?:/i, protocol));
                        }
                        {
                            __statement_mRtBoR(160);
                            var fileData = {
                                    filename: name,
                                    path: path,
                                    size: file.size,
                                    filetype: file.type,
                                    url: url
                                };
                        }
                        if (__expression_JEXRqr(161), update) {
                            __block_s7vX83(30);
                            {
                                __statement_mRtBoR(162);
                                __extro_WqjK9Y(163, __intro_W15Vqy(163, item).set(field.path, fileData));
                            }
                        }
                        {
                            __statement_mRtBoR(164);
                            __expression_JEXRqr(165), callback(null, fileData);
                        }
                    }));
                }
            };
        }
        {
            __statement_mRtBoR(166);
            __extro_WqjK9Y(167, __intro_W15Vqy(167, async).eachSeries(this._pre.upload, function (fn, next) {
                __block_s7vX83(31);
                {
                    __statement_mRtBoR(168);
                    __expression_JEXRqr(169), fn(item, file, next);
                }
            }, function (err) {
                __block_s7vX83(32);
                if (__expression_JEXRqr(170), err) {
                    __block_s7vX83(33);
                    return __expression_JEXRqr(171), (__expression_JEXRqr(172), callback(err));
                }
                {
                    __statement_mRtBoR(173);
                    __expression_JEXRqr(174), doUpload();
                }
            }));
        }
    };
}
{
    __statement_mRtBoR(175);
    s3file.prototype.getRequestHandler = function (item, req, paths, callback) {
        __block_s7vX83(34);
        {
            __statement_mRtBoR(176);
            var field = this;
        }
        if (__extro_WqjK9Y(177, __intro_W15Vqy(177, utils).isFunction(paths))) {
            __block_s7vX83(35);
            {
                __statement_mRtBoR(178);
                callback = paths;
            }
            {
                __statement_mRtBoR(179);
                paths = field.paths;
            }
        } else if (__expression_JEXRqr(180), !(__expression_JEXRqr(181), paths)) {
            __block_s7vX83(36);
            {
                __statement_mRtBoR(182);
                paths = field.paths;
            }
        }
        {
            __statement_mRtBoR(183);
            callback = (__expression_JEXRqr(184), (__expression_JEXRqr(185), callback) || function () {
                __block_s7vX83(37);
            });
        }
        return __expression_JEXRqr(186), function () {
            __block_s7vX83(38);
            if (req.body) {
                __block_s7vX83(39);
                {
                    __statement_mRtBoR(187);
                    var action = req.body[paths.action];
                }
                if (__extro_WqjK9Y(188, __intro_W15Vqy(188, /^(delete|reset)$/).test(action))) {
                    __block_s7vX83(40);
                    {
                        __statement_mRtBoR(189);
                        __extro_WqjK9Y(190, __intro_W15Vqy(190, field).apply(item, action));
                    }
                }
            }
            if (__expression_JEXRqr(191), (__expression_JEXRqr(192), req.files && req.files[paths.upload]) && req.files[paths.upload].size) {
                __block_s7vX83(41);
                return __expression_JEXRqr(193), __extro_WqjK9Y(194, __intro_W15Vqy(194, field).uploadFile(item, req.files[paths.upload], true, callback));
            }
            return __expression_JEXRqr(195), (__expression_JEXRqr(196), callback());
        };
    };
}
{
    __statement_mRtBoR(197);
    s3file.prototype.handleRequest = function (item, req, paths, callback) {
        __block_s7vX83(42);
        {
            __statement_mRtBoR(198);
            __expression_JEXRqr(199), __extro_WqjK9Y(200, __intro_W15Vqy(200, this).getRequestHandler(item, req, paths, callback))();
        }
    };
}
{
    __statement_mRtBoR(201);
    exports = module.exports = s3file;
}